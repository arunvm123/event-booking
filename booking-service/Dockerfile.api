# Multi-stage build for Booking Service API
FROM golang:1.22-alpine AS builder

# Set working directory
WORKDIR /app

# Install git for dependencies
RUN apk add --no-cache git

# Copy booking service go mod files
COPY booking-service/go.mod booking-service/go.sum ./

# Download dependencies
RUN go mod download

# Copy booking service source code
COPY booking-service/ .

# Build the API binary
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o booking-service-api .

# Final stage - minimal image
FROM alpine:latest

# Install ca-certificates for HTTPS requests
RUN apk --no-cache add ca-certificates tzdata

# Create non-root user
RUN adduser -D -s /bin/sh bookinguser

WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/booking-service-api .
COPY --from=builder /app/config.yaml .

# Change ownership to non-root user
RUN chown -R bookinguser:bookinguser /app

# Switch to non-root user
USER bookinguser

# Expose port
EXPOSE 8083

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8083/health || exit 1

# Set environment variable for API mode
ENV SERVICE_MODE=api

# Run the API
CMD ["./booking-service-api"]
